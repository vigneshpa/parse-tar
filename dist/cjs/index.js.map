{"mappings":"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","sources":["src/parseTar.ts","src/parseTarHeader.ts"],"sourcesContent":["import parseTarHeader, { TarFile } from './parseTarHeader';\nexport { TarFile, TarFileType } from './parseTarHeader';\nexport default async function parseTar(tarfile: File | Blob | ArrayBuffer | ArrayBufferLike) {\n  const input = new Blob([tarfile]);\n  const blocks = getBlocks(input);\n  let files: Readonly<TarFile>[] = [];\n  {\n    let mode: 'header' | 'file' = 'header';\n    let file: TarFile;\n    let fileBlocks: Blob[] = [];\n    let fileBlocksCount = 0;\n    let fileIdx = 0;\n    for (const block of blocks) {\n      if (mode === 'file') {\n        if (fileIdx < fileBlocksCount) {\n          fileBlocks.push(block);\n          fileIdx++;\n        } else {\n          file!.contents = new Blob(fileBlocks).slice(0, file!.size);\n          files.push(Object.freeze(file!));\n          if (await isEmptyBlock(block)) break;\n          mode = 'header';\n        }\n      }\n      if (mode === 'header') {\n        file = await parseTarHeader(block);\n        mode = 'file';\n        fileBlocks = [];\n        fileBlocksCount = Math.ceil(file.size / 512);\n        fileIdx = 0;\n      }\n    }\n  }\n  return files;\n}\nfunction getBlocks(input: Blob, size = 512) {\n  const noOfBlocks = Math.floor(input.size / size);\n  const ret: Blob[] = [];\n  for (let i = 0; i < noOfBlocks; i++) {\n    ret.push(input.slice(i * size, (i + 1) * size));\n  }\n  return ret;\n}\n\nasync function isEmptyBlock(block: Blob) {\n  const buf = new Uint8Array(await block.arrayBuffer());\n  return buf.every(val => val === 0);\n}\n","// https://en.wikipedia.org/wiki/Tar_(computing)#Header\nexport const enum TarFileType {\n  NormalFile = 0,\n  HardLink = 1,\n  SymbolicLink = 2,\n  CharacterSpecial = 3,\n  BlockSpecial = 4,\n  Directory = 5,\n  NamedFIFOPipe = 6,\n  ContiguousFile = 7,\n  Vendor = 'vendor',\n}\nexport class TarFile {\n  name: string = '';\n  mode: number = 0;\n  uid: number = 0;\n  gid: number = 0;\n  size: number = 0;\n  mtime: Date = new Date(0);\n  type: TarFileType = TarFileType.NormalFile;\n  linkname: string = '';\n  contents: Blob = new Blob();\n  uname: string = '';\n  gname: string = '';\n  deviceMajor: number = 0;\n  deviceMinor: number = 0;\n  fileNamePrefix: string = '';\n}\nexport default async function parseTarHeader(headerBlock: Blob) {\n  const header = await headerBlock.arrayBuffer();\n\n  const file = new TarFile();\n  file.name = readString(header, 0, 100);\n  file.mode = readOctal(header, 100, 8);\n  file.uid = readOctal(header, 108, 8);\n  file.gid = readOctal(header, 116, 8);\n  file.size = readOctal(header, 124, 12);\n  file.mtime = new Date(readOctal(header, 136, 12) * 1000);\n  const checksum = readString(header, 148, 8);\n  const ftype = readString(header, 156, 1);\n  if (ftype)\n    if (ftype.charCodeAt(0) >= 48 && ftype.charCodeAt(0) <= 57) file.type = ftype.charCodeAt(0);\n    else file.type = TarFileType.Vendor;\n  else file.type = TarFileType.NormalFile;\n  file.linkname = readString(header, 157, 100);\n\n  const ustarIndicator = readString(header, 257, 6);\n  if (ustarIndicator === 'ustar') {\n    file.uname = readString(header, 265, 32);\n    file.gname = readString(header, 297, 32);\n    file.deviceMajor = readOctal(header, 329, 8);\n    file.deviceMinor = readOctal(header, 337, 8);\n    file.fileNamePrefix = readString(header, 345, 155);\n  } else console.warn('No Ustar indicator detected in tar file');\n  return file;\n}\nfunction readString(input: ArrayBufferLike, start: number = 0, size?: number) {\n  const decoder = new TextDecoder('ascii');\n  let buf = new Uint8Array(input.slice(start, size ? start + size : undefined));\n  const nullIdx = buf.indexOf(0);\n  buf = buf.slice(0, nullIdx);\n  return decoder.decode(buf);\n}\nfunction readOctal(input: ArrayBufferLike, start: number = 0, end?: number) {\n  return parseInt(readString(input, start, end), 8);\n}\n"],"names":[],"version":3,"file":"index.js.map"}